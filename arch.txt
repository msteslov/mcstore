TOKEN - токен бота
ADMIN_ID - айди админа(главный доступ)
GROUP_ID - айди группы для логов
IP_PORT - адрес в пормате ip:port


# КОМАНДЫ
/start -> message
/auth [auth_code] -> create_prof/acc/username/gencode -> message
/проф, prof [@username] доступ к просмотрю чужого профиля имеют только банкиры и админы
/server, сервер, казна, budg доступ имеют только админы, банкиры и стаф(выдается админом обычным юзерам)
/tup_server, тупс [amount] -пополнение сервера. могут только банкиры и админы
/access, доступ [gamename] - выдача прав на просмотр казны
/unaccess, недоступ [gamename] - изъятие прав на просмотр казны
/get_code, пкд - получение реф кода(один на все время)
/реф, activate [ref_code] - активация реф кода
/создать_карту, make_card - создание карты
/кард_инфо, card_info {card_id] - получение информации о карте, доступ имеют только админы и банкиры
/bank_info, банк_инфо [trans_id] - получение информации о транзакции, могут все
/trans, перевести [-a] [.gamename/,card_id/@username] message amount - перевод для админов с баланса сервера
/trans, перевести [-e] [.gamename/,card_id/@username] message amount - перевод со своей главное карты(для всех)
/trans, перевести [-c] [.gamename/,card_id/@username] [.gamename/,card_id/@username] message amount - перевод откуда угодно куда угодно
/penalty, штраф [gamename] message [amount] - штраф пользователя, снимается с главной карты, могут только админы
/начать_работу, begin - начало работы
/завершить_работу, finish - конец работы
/status, статус - статус работы
/отчет, report - отчет
/call - связь с админом
/stat - статистика пользователей, доступ имеет только админ
/ban
/unban
/check_id - получение юзернейма по айди
/send - отправка сообщения пользователю, может только админ


# ХЭНДЛЕРЫ ТЕКСТА
старт -> basic keyboard
создать карту -> create_card (1 = free, next = (cards_count - 1) * 5)
профиль -> return user spec
Начать работать
Завершить работу
Поддержка
Статистика



account.json:
user_id:
    list cards;
    list last_transactions;         //last 5 transactions
    int count_transactions;
    int balance;
    int count_cards;                
    string role;                    // admin, bank, user
    string user;                    //tg username
    string main_card;               //first maden card
    string UUID;                    //game uuid
    string name;                    //game nickname

cards.json:
card.id:
    int balance;
    list last_transactions;
    int count_transactions;
    string user;
    string name;
    string uuid;

transactions.json:
transaction.id:
    string from;
    string from_card;
    string to;
    string to_card;
    int amount;
    string date;
    string message;
    string id;
    string type;
    int status;

usernames.json:
username(tg):
    string user_id;
    string UUID;
    string name;

gameacc.json:
name:
    string name;
    string uuid;
    string user_id;
    string username;
